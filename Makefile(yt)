LEX=flex
YACC=bison
CC=g++
OBJECT=main			#生成的目标文件

$(OBJECT): use.cpp lex.yy.o  yacc.tab.o parser.o interp.o QL.o
	$(CC) use.cpp lex.yy.o yacc.tab.o parser.o interp.o QL.o -o $(OBJECT)
	@./$(OBJECT)	#编译后立刻运行

parser.o: tree.cpp parser_internal.h main.h
	$(CC) -c tree.cpp  -o parser.o

interp.o: interp.cpp parser_internal.h main.h
	$(CC) -c interp.cpp -o interp.o

QL.o:	query.h query.cpp
	$(CC) -c query.cpp -o QL.o

lex.yy.o: lex.yy.c  yacc.tab.h  main.h
	$(CC) -c lex.yy.c

yacc.tab.o: yacc.tab.c  main.h
	$(CC) -c yacc.tab.c

yacc.tab.c  yacc.tab.h: yacc.y
#	bison使用-d参数编译.y文件
	$(YACC) -d yacc.y

lex.yy.c: lex.l lexhelper.cpp yacc.tab.h
	$(LEX) lex.l

clean:
	@rm -f $(OBJECT)  *.o